-- Database Creation
CREATE DATABASE IF NOT EXISTS FoodDeliveryDB;
USE FoodDeliveryDB;

-- -----------------------------------------------------
-- Table `Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Customers (
  customer_id INT AUTO_INCREMENT PRIMARY KEY,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  phone_number VARCHAR(20),
  address TEXT,
  registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- -----------------------------------------------------
-- Table `Restaurants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Restaurants (
  restaurant_id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  address TEXT,
  cuisine_type VARCHAR(50),
  phone_number VARCHAR(20),
  opening_hours VARCHAR(50),
  closing_hours VARCHAR(50)
);

-- -----------------------------------------------------
-- Table `Menu_Items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Menu_Items (
  menu_item_id INT AUTO_INCREMENT PRIMARY KEY,
  restaurant_id INT NOT NULL,
  item_name VARCHAR(100) NOT NULL,
  description TEXT,
  price DECIMAL(10, 2) NOT NULL,
  category VARCHAR(50),
  is_available BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (restaurant_id) REFERENCES Restaurants (restaurant_id)
);

-- -----------------------------------------------------
-- Table `Delivery_Riders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Delivery_Riders (
  rider_id INT AUTO_INCREMENT PRIMARY KEY,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  vehicle_type VARCHAR(50), -- e.g., Bike, Scooter, Car
  phone_number VARCHAR(20),
  availability_status ENUM('Available', 'Busy', 'Offline') DEFAULT 'Available'
);


-- -----------------------------------------------------
-- Table `Coupons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Coupons (
  coupon_id INT AUTO_INCREMENT PRIMARY KEY,
  coupon_code VARCHAR(50) UNIQUE NOT NULL,
  discount_percentage DECIMAL(5, 2) NOT NULL,
  expiry_date DATE,
  description TEXT,
  is_active BOOLEAN DEFAULT TRUE
);


-- -----------------------------------------------------
-- Table `Users` (for authentication)
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Users (
  user_id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL, -- Store hashed passwords in real applications!
  role ENUM('Admin', 'Restaurant_Staff', 'Customer_Support') DEFAULT 'Customer_Support'
);

-- -----------------------------------------------------
-- Table `Customer_Loyalty_Points`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Customer_Loyalty_Points (
  loyalty_points_id INT AUTO_INCREMENT PRIMARY KEY,
  customer_id INT NOT NULL,
  points_earned INT DEFAULT 0,
  points_redeemed INT DEFAULT 0,
  last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)
);

-- -----------------------------------------------------
-- Table `Customer_Tiers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Customer_Tiers (
  tier_id INT AUTO_INCREMENT PRIMARY KEY,
  tier_name VARCHAR(50) UNIQUE NOT NULL, -- e.g., 'Bronze', 'Silver', 'Gold'
  min_points INT NOT NULL,
  discount_percentage DECIMAL(5, 2) DEFAULT 0.00, -- Tier-based discount
  description TEXT
);


-- -----------------------------------------------------
-- Table `Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Orders (
  order_id INT AUTO_INCREMENT PRIMARY KEY,
  customer_id INT NOT NULL,
  restaurant_id INT NOT NULL,
  order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  delivery_address TEXT NOT NULL,
  order_status ENUM('Pending', 'Confirmed', 'Preparing', 'Out for Delivery', 'Delivered', 'Cancelled', 'Failed') DEFAULT 'Pending',
  total_amount DECIMAL(10, 2) NOT NULL,
  payment_method ENUM('Cash', 'Card', 'Online') DEFAULT 'Cash',
  delivery_rider_id INT,
  estimated_delivery_time TIMESTAMP,
  actual_delivery_time TIMESTAMP,
  cancellation_reason TEXT, -- For cancelled orders
  failure_reason TEXT,      -- For failed deliveries
  coupon_id INT,            -- Link to coupons if used
  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),
  FOREIGN KEY (restaurant_id) REFERENCES Restaurants (restaurant_id),
  FOREIGN KEY (delivery_rider_id) REFERENCES Delivery_Riders (rider_id),
  FOREIGN KEY (coupon_id) REFERENCES Coupons (coupon_id)
);

-- -----------------------------------------------------
-- Table `Order_Items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Order_Items (
  order_item_id INT AUTO_INCREMENT PRIMARY KEY,
  order_id INT NOT NULL,
  menu_item_id INT NOT NULL,
  quantity INT NOT NULL,
  subtotal DECIMAL(10, 2) NOT NULL,
  FOREIGN KEY (order_id) REFERENCES Orders (order_id),
  FOREIGN KEY (menu_item_id) REFERENCES Menu_Items (menu_item_id)
);


-- -----------------------------------------------------
-- Table `Refunds`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Refunds (
  refund_id INT AUTO_INCREMENT PRIMARY KEY,
  order_id INT NOT NULL,
  refund_amount DECIMAL(10, 2) NOT NULL,
  refund_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  refund_reason TEXT,
  refund_status ENUM('Pending', 'Approved', 'Rejected', 'Processed') DEFAULT 'Pending',
  FOREIGN KEY (order_id) REFERENCES Orders (order_id)
);


-- Sample Data for Restaurants
INSERT INTO Restaurants (name, address, cuisine_type, phone_number, opening_hours, closing_hours) VALUES
('Pizza Palace', '123 Main St', 'Italian', '555-1111', '11:00', '22:00'),
('Burger Barn', '456 Oak Ave', 'American', '555-2222', '10:00', '23:00'),
('Sushi Spot', '789 Pine Ln', 'Japanese', '555-3333', '12:00', '21:00'),
('Taco Town', '101 Elm St', 'Mexican', '555-4444', '11:30', '21:30'),
('Curry Corner', '202 Maple Dr', 'Indian', '555-5555', '18:00', '22:00');

-- Sample Data for Menu Items (Pizza Palace)
INSERT INTO Menu_Items (restaurant_id, item_name, description, price, category) VALUES
(1, 'Margherita Pizza', 'Classic tomato and mozzarella', 12.99, 'Pizza'),
(1, 'Pepperoni Pizza', 'Pepperoni and cheese', 14.99, 'Pizza'),
(1, 'Pasta Carbonara', 'Creamy pasta with bacon and egg', 15.99, 'Pasta'),
(1, 'Garlic Bread', 'Oven-baked garlic bread', 5.99, 'Sides');

-- Sample Data for Menu Items (Burger Barn)
INSERT INTO Menu_Items (restaurant_id, item_name, description, price, category) VALUES
(2, 'Classic Burger', 'Beef patty, lettuce, tomato, cheese', 8.99, 'Burgers'),
(2, 'Cheeseburger', 'Beef patty, cheese', 7.99, 'Burgers'),
(2, 'Fries', 'Crispy French fries', 3.99, 'Sides'),
(2, 'Onion Rings', 'Crispy onion rings', 4.99, 'Sides');

-- Sample Data for Menu Items (Sushi Spot)
INSERT INTO Menu_Items (restaurant_id, item_name, description, price, category) VALUES
(3, 'Salmon Nigiri', 'Fresh salmon on rice', 6.99, 'Sushi'),
(3, 'Tuna Roll', 'Tuna and avocado roll', 7.99, 'Sushi'),
(3, 'California Roll', 'Crab, avocado, cucumber', 5.99, 'Sushi'),
(3, 'Miso Soup', 'Traditional miso soup', 3.50, 'Sides');

-- Sample Data for Customers
INSERT INTO Customers (first_name, last_name, email, phone_number, address) VALUES
('Alice', 'Smith', 'alice.smith@email.com', '555-1234', '10 Downing St'),
('Bob', 'Johnson', 'bob.johnson@email.com', '555-5678', '22 Acacia Ave'),
('Charlie', 'Brown', 'charlie.brown@email.com', '555-9012', '1 Park Rd'),
('Diana', 'Lee', 'diana.lee@email.com', '555-3456', '4 High St'),
('Ethan', 'White', 'ethan.white@email.com', '555-7890', '15 River Rd');

-- Sample Data for Delivery Riders
INSERT INTO Delivery_Riders (first_name, last_name, vehicle_type, phone_number) VALUES
('Rider 1', 'Lastname1', 'Bike', '555-1112'),
('Rider 2', 'Lastname2', 'Scooter', '555-3334'),
('Rider 3', 'Lastname3', 'Car', '555-5556');

-- Sample Data for Coupons
INSERT INTO Coupons (coupon_code, discount_percentage, expiry_date, description, is_active) VALUES
('SAVE10', 10.00, '2024-12-31', '10% off your first order', TRUE),
('FREEDELIVERY', 100.00, '2024-11-15', 'Free delivery on orders over $20', TRUE);

-- Sample Data for Customer Loyalty Points
INSERT INTO Customer_Loyalty_Points (customer_id, points_earned) VALUES
(1, 50),
(2, 100),
(3, 25);

-- Sample Data for Customer Tiers
INSERT INTO Customer_Tiers (tier_name, min_points, discount_percentage, description) VALUES
('Bronze', 0, 0.00, 'Basic tier'),
('Silver', 50, 5.00, 'Regular customers'),
('Gold', 100, 10.00, 'Loyal customers');

-- Sample Data for Users (Authentication)
INSERT INTO Users (username, password, role) VALUES
('admin', 'password123', 'Admin'), -- In real app, hash the password!
('restaurant_staff_1', 'restpass1', 'Restaurant_Staff'),
('support_user_1', 'suppass1', 'Customer_Support');

-- Sample Orders (10 example orders)
INSERT INTO Orders (customer_id, restaurant_id, delivery_address, total_amount, payment_method, delivery_rider_id, order_status, estimated_delivery_time, coupon_id) VALUES
(1, 1, 'Customer 1 Address 1', 28.98, 'Card', 1, 'Delivered', '2024-01-20 19:30:00', 1), -- Order 1
(2, 2, 'Customer 2 Address 2', 15.98, 'Cash', 2, 'Delivered', '2024-01-20 20:00:00', NULL),   -- Order 2
(3, 3, 'Customer 3 Address 3', 18.97, 'Online', 3, 'Out for Delivery', '2024-01-20 19:45:00', NULL), -- Order 3
(4, 1, 'Customer 4 Address 4', 30.97, 'Card', 1, 'Preparing', '2024-01-20 20:15:00', 2),   -- Order 4
(5, 2, 'Customer 5 Address 5', 12.98, 'Cash', 2, 'Confirmed', '2024-01-20 20:30:00', NULL),   -- Order 5
(1, 3, 'Customer 1 Address 1', 25.97, 'Online', 3, 'Pending', '2024-01-20 20:45:00', NULL),   -- Order 6
(2, 1, 'Customer 2 Address 2', 40.95, 'Card', 1, 'Cancelled', '2024-01-20 21:00:00', NULL),  -- Order 7 (Cancelled)
(3, 2, 'Customer 3 Address 3', 10.00, 'Cash', 2, 'Failed', '2024-01-20 21:15:00', NULL),     -- Order 8 (Failed)
(4, 3, 'Customer 4 Address 4', 22.00, 'Online', 3, 'Delivered', '2024-01-20 21:30:00', NULL),  -- Order 9
(5, 1, 'Customer 5 Address 5', 35.00, 'Card', 1, 'Delivered', '2024-01-20 21:45:00', NULL);  -- Order 10

-- Sample Order Items for the Orders (linking orders to menu items)
INSERT INTO Order_Items (order_id, menu_item_id, quantity, subtotal) VALUES
(1, 1, 1, 12.99), -- Order 1: Margherita Pizza
(1, 2, 1, 14.99), -- Order 1: Pepperoni Pizza
(2, 5, 2, 17.98), -- Order 2: 2 Cheeseburgers
(3, 9, 1, 6.99),  -- Order 3: Salmon Nigiri
(3, 10, 1, 7.99), -- Order 3: Tuna Roll
(3, 11, 1, 5.99), -- Order 3: California Roll
(4, 3, 2, 31.98), -- Order 4: 2 Pasta Carbonara
(5, 6, 1, 7.99),  -- Order 5: Cheeseburger
(5, 7, 1, 3.99),  -- Order 5: Fries
(6, 12, 2, 7.00), -- Order 6: 2 Miso Soups
(9, 9, 2, 13.98),  -- Order 9: 2 Salmon Nigiri
(10, 1, 1, 12.99),-- Order 10: Margherita Pizza
(10, 4, 2, 11.98); -- Order 10: 2 Garlic Bread
